version: "3"

services:
    api:
        build: ./api
        restart: unless-stopped
        expose:
            - 5000
        ports:
            - 5000:5000
        volumes:
            - ./api:/usr/src/api
        environment:
            - DB_CONNECT_STR=postgresql+psycopg2://medieteknik:rgb@db/medieteknikdev
            - GUNICORN_CMD_ARGS="--reload"
            - FLASK_SECRET_KEY=2kfueoVmpd0FBVFCJD0V
            - LOCAL_CAS=1
            - CAS_SERVER=/
            - CAS_LOGIN_ROUTE=/
            - CAS_LOGOUT_ROUTE=/logout
            - CAS_VALIDATE_ROUTE=/p3/serviceValidate
    app:
        build: ./app
        ports:
            - 3001:3001
        environment:
            - PORT=3001
        volumes:
            - ./app/src:/usr/src/app/src
            - ./app/public:/usr/src/app/public
            - static-files:/usr/src/app/build
        command: npm run start

    db:
        image: postgres:10-alpine
        container_name: postgres
        ports:
            - 5432:5432
        environment:
            - POSTGRES_DB=medieteknikdev
            - POSTGRES_USER=medieteknik
            - POSTGRES_PASSWORD=rgb
        volumes:
            - './db:/docker-entrypoint-initdb.d/'

    web:
        image: nginx:alpine
        container_name: web
        restart: unless-stopped
        tty: true
        ports:
            - 3000:3000
        expose:
            - 3000
        environment:
            - NGINX_SERVER_NAME=localhost
        volumes:
            - ./nginx/nginx_dev.conf:/etc/nginx/nginx.conf
            - static-files:/var/www
        depends_on:
            - app
            - api

volumes:
    static-files:
